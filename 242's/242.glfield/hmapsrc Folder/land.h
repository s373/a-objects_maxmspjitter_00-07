/*   Copyright (C) 2000 Nate Miller nkmiller@calpoly.edu   This program is free software; you can redistribute it and/or   modify it under the terms of the GNU General Public License   as published by the Free Software Foundation; either version 2   of the License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.   You should have received a copy of the GNU General Public License   along with this program; if not, write to the Free Software   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.   See gpl.txt for more information regarding the GNU General Public License.*/#ifndef __LANDH__#define __LANDH__#include "mathlib.h"#include "utility.h"struct land_t{   land_t();   virtual ~land_t() {Reset();}   void Reset(void);   bool Load(char *name, bool reload = 0);      const vec3_t *GetVerts(void) const     {return verts;}   const uint *GetTriIndex(void) const    {return ndx;}   const vec2_t *GetTexCoords(void) const {return tex;}   const vec3_t *GetVertNorms(void) const {return norms;}   int GetNumTris(void) const             {return numTris;}   int GetWidth(void) const               {return w;}   int GetHeight(void) const              {return h;}   void SetStride(float s)                {stride = s;}   float GetStride(void) const            {return stride;}   void SetScale(float s)                 {scale = s;}   float GetScale(void) const             {return scale;}   void SetTile(float t)                  {tile = t;}   float GetTile(void) const              {return tile;}protected:   void SetupArrays(void);   void BuildTerrain(void);   void GetNormals(void);   tga_t img;     // height map image   int numTris;   // number of triangles   uint *ndx;     // triangle indicies   vec3_t *verts; // terrain verts   vec2_t *tex;   // texture coordinates   vec3_t *norms; // vertex normals   float stride;  // amount to move from vert to vert   float scale;   // how to scale the heightmap data   float tile;    // how much to tile a texture   int w;         // width of terrain   int h;         // height of terrain};#endif